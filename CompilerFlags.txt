# vim:ft=cmake:

execute_process(
  COMMAND "${CMAKE_CXX_COMPILER}" "-v"
  OUTPUT_VARIABLE COMPILER_TYPE
  ERROR_VARIABLE COMPILER_TYPE
)

execute_process(
  COMMAND "${CMAKE_CXX_COMPILER}" "-dumpversion"
  OUTPUT_VARIABLE COMPILER_VERSION
)

include(CheckCXXCompilerFlag)


list(APPEND FLAGS "-ansi")
list(APPEND FLAGS "-pedantic")

list(APPEND FLAGS "-Wfatal-errors")
list(APPEND FLAGS "-Wall")
list(APPEND FLAGS "-Wextra")
list(APPEND FLAGS "-Wformat=2")
list(APPEND FLAGS "-Wcomment")
list(APPEND FLAGS "-Wshadow")
list(APPEND FLAGS "-Wctor-dtor-privacy")
list(APPEND FLAGS "-Wnon-virtual-dtor")
list(APPEND FLAGS "-Wreorder")
list(APPEND FLAGS "-Winit-self")
list(APPEND FLAGS "-Wmissing-include-dirs")
list(APPEND FLAGS "-Wunused")
list(APPEND FLAGS "-Wunused-parameter")
list(APPEND FLAGS "-Wunknown-pragmas")
list(APPEND FLAGS "-Wstrict-overflow=2")
list(APPEND FLAGS "-Wstrict-overflow=3")
list(APPEND FLAGS "-Wstrict-overflow=4")
list(APPEND FLAGS "-Wstrict-aliasing")
list(APPEND FLAGS "-Wfloat-equal")
list(APPEND FLAGS "-Wundef")
list(APPEND FLAGS "-Wcast-qual")
list(APPEND FLAGS "-Wcast-align")
list(APPEND FLAGS "-Wwrite-strings")
list(APPEND FLAGS "-Wmissing-format-attribute")
list(APPEND FLAGS "-Wno-multichar")
list(APPEND FLAGS "-Wpacked")
list(APPEND FLAGS "-Wredundant-decls")
list(APPEND FLAGS "-Winvalid-pch")
list(APPEND FLAGS "-Wlong-long")
list(APPEND FLAGS "-Wdisabled-optimization")
list(APPEND FLAGS "-Wconversion")
list(APPEND FLAGS "-Wabi")
list(APPEND FLAGS "-Wstrict-null-sentinel")
list(APPEND FLAGS "-Weffc++")
list(APPEND FLAGS "-Wno-non-template-friend")
list(APPEND FLAGS "-Wsign-promo")
list(APPEND FLAGS "-Wswitch-default")
list(APPEND FLAGS "-Wsync-nand")
list(APPEND FLAGS "-Wlogical-op")
list(APPEND FLAGS "-Wvla")
list(APPEND FLAGS "-Wstack-protector")
list(APPEND FLAGS "-Wold-style-cast")
list(APPEND FLAGS "-Wno-pmf-conversions")
list(APPEND FLAGS "-Winline")
list(APPEND FLAGS "-Wmissing-noreturn")
list(APPEND FLAGS "-Wunsafe-loop-optimizations")
list(APPEND FLAGS "-Waggregate-return")
list(APPEND FLAGS "-Wsign-conversion")
list(APPEND FLAGS "-Wpadded")
list(APPEND FLAGS "-Wswitch-enum")

list(APPEND FLAGS "-fPIC")
list(APPEND FLAGS "-funsafe-loop-optimizations")
list(APPEND FLAGS "-fno-strict-aliasing")
list(APPEND FLAGS "-funit-at-a-time")


if(CMAKE_COMPILER_IS_GNUCXX)
  list(REMOVE_ITEM FLAGS "-Winline")
  list(REMOVE_ITEM FLAGS "-Waggregate-return")
  list(REMOVE_ITEM FLAGS "-Wpadded")
  list(REMOVE_ITEM FLAGS "-Wswitch-enum")
  if(COMPILER_VERSION STRLESS "4.2.2")
    list(REMOVE_ITEM FLAGS "-Wmissing-noreturn")
    list(REMOVE_ITEM FLAGS "-pedantic")
  endif()
  if(COMPILER_VERSION STRLESS "4.4.2")
    list(REMOVE_ITEM FLAGS "-Wabi")
    list(REMOVE_ITEM FLAGS "-Wunsafe-loop-optimizations")
  endif()
elseif("${COMPILER_TYPE}" MATCHES "clang.*")
  list(REMOVE_ITEM FLAGS "-Wmismatched-tags")
endif()

if(APPLE)
  list(REMOVE_ITEM FLAGS "-Wmissing-include-dirs")
endif()

foreach(_warning ${FLAGS})
  string(REGEX REPLACE "[^a-zA-Z0-9]" "" __warning ${_warning})
  string(TOUPPER ${__warning} __warning)
  CHECK_CXX_COMPILER_FLAG(${_warning} ${__warning})
  if(${__warning})
    set(VALID_FLAGS "${VALID_FLAGS} ${_warning}")
  endif()
endforeach()

# remove unsupported warning flags
# if(CMAKE_COMPILER_IS_GNUCXX)
#   if(COMPILER_VERSION STRLESS "4.2.2")
#     string(REGEX REPLACE "[^\n]*-Wlogical-op[^\n]*\n" ""               WARNINGS ${WARNINGS})
#     string(REGEX REPLACE "[^\n]*-Wvla[^\n]*\n" ""               WARNINGS ${WARNINGS})
#     string(REGEX REPLACE "[^\n]*-Wsign-conversion[^\n]*\n" ""               WARNINGS ${WARNINGS})
#     string(REGEX REPLACE "[^\n]*-Wmissing-noreturn[^\n]*\n" ""               WARNINGS ${WARNINGS})
#     string(REGEX REPLACE "[^\n]*-Wunsafe-loop-optimizations[^\n]*\n" ""               WARNINGS ${WARNINGS})
#     string(REGEX REPLACE "[^\n]*-Wstrict-overflow=4[^\n]*\n" ""               WARNINGS ${WARNINGS})
#   endif()
#   if(COMPILER_VERSION STRLESS "4.3.4")
#     string(REGEX REPLACE "[^\n]*-Wsync-nand[^\n]*\n" ""               WARNINGS ${WARNINGS})
#   endif()
#   if(COMPILER_VERSION STREQUAL "4.4.1\n")
#     string(REGEX REPLACE "[^\n]*-Wunsafe-loop-optimizations[^\n]*\n" ""   WARNINGS ${WARNINGS})
#   endif()
# elseif("${CMAKE_CXX_COMPILER}" MATCHES ".*clang.*")
#   string(REGEX REPLACE "[^\n]*-Wstrict-null-sentinel[^\n]*\n" ""      WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-Wno-non-template-friend[^\n]*\n" ""    WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-Wsync-nand[^\n]*\n" ""                 WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-Wlogical-op[^\n]*\n" ""                WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-Wno-pmf-conversions[^\n]*\n" ""        WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-Wunsafe-loop-optimizations[^\n]*\n" "" WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-Wsign-conversion[^\n]*\n" ""           WARNINGS ${WARNINGS})
#   string(REGEX REPLACE "[^\n]*-funsafe-loop-optimizations[^\n]*\n" "" OPTIMIZATIONS ${OPTIMIZATIONS})
#   set(WARNINGS "${WARNINGS} -Wno-mismatched-tags")
# endif()
